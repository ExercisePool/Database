上午：
	Oracle的安装以及运行的步骤（使用学习版）：
		
		1、安装Oracle，注意不要改动任何东西，只要记住你设置的密码就行了；
		2、直接转至数据库主页；
		3、使用system为用户名，你安装的时候的密码为登陆密码登陆网页版的Oracle设置界面；
		4、依次点击‘管理’-->‘数据库用户’-->‘创建用户’然后进入创建用户界面，填写用户名及
			 密码，记得在下面所有权限处勾选上，然后点击确定；
		5、安装PL/SQL，并且使用你创建的用户登陆进去，再在tools的选项下点击‘import table’然
			 后选择表的备份文件，点确认；
		6、如果你想使用Navcat的话，安装好，直接填写相关的登陆信息，注意，IP地址是本机IP，即：
			 127.0.0.1，Service name填写的是你的表空间名称（如果是学习版，则是XE）；如果你使用
			 的是企业版，或者是两个版本都存在的话，在Navcat上面寻找选项，再点击最后一项的OCI
			 文件设置，这里选择你Oracle目录下oracle92下的bin目录下的oci.dll文件，若是学习版，则
			 不需要更改；
		7、注意在运行数据库之前，先开启相关服务；
		
	常用命令：
	
		1、desc+表名；：表示对一个表进行结构查看；
		2、set linesize+数量；：表示设置CMD页面展示的行宽；
		3、set pagesize+数量；：表示设置一页显示的数据数量；
		
	DQL语句：
		
		1、查询语句：
			 select + 列名 + from + 表名；如果想要显示所有的列的话，直接使用*代替，如果想显示几个
			 列的话，用逗号隔开；
			 
		2、别名：
			 关键字，as+自定义名称，我们通常在一些我们经过处理的字段上面使用别名让我们更加方便的
			 去理解这个新的列的含义；另外，这个as可以不写，但是建议写上，方便阅读代码；
			 
		3、数字运算：
			 包括：+，-，*，/；
			 注意：空值跟任意数据做算术运算结果都为空；
			 注意：数字运算只能作用在数字列，不能使用在非数字类型的字段；
			 
		4、nvl函数：
			 格式：nvl（p1，p2）：如果p1为空，则显示p2，否则，显示p1；
			 
			 例：查找emp表中所有人的姓名以及月收入
			 		select ename,sal+nvl(comm,0) month from emp;
			 
		5、列名的拼接：||
			 例： 查找出emp表中所有人以姓名以及工作连接在一起的信息；
			 		select ename||','||job info from emp;
			 
		6、去重复：distinct
			 使用在你想要去重复的字段之前
			 例：查找出emp表中存在的部门编号
			 		select distinct deptno from emp;
			 
		7、带条件的查询：where
			 查询一些附带某些条件的语句
			 例：查找出emp表中部门编号为10的所有人员信息
			 		select * from emp where deptno=10;
			 
			 条件语句后可以跟的比较操作符有：>,<,>=,<=,=,!=,<>;
			 
			 注意：基本上这些操作符只能使用在数字类型的列中，但是=和<>可以使用于字符串，在Oracle
			 		   中，字符串一律使用单引号引出来，并且所有的数据是分大小写的，字段名不分；
			 		   
			 逻辑操作符：and、between...and、or、in（number1,number2），is null，is not null，like;
			 
			 例：查找出emp表中工资在1200-3000以内的所有人的信息；
			 	    第一种写法：select * from emp where sal>=1200 and sal<=3000;
			 	    第二种写法：select * from emp where sal between 1200 and 3000;
			 	    注意：between里面的两个匹配的数字是有相等关系存在的；
			 	    
			 例：查找出emp表中工资为1250或者2600的所有人的信息；
			 		第一种写法：select * from emp where sal=1250 or sal=2600;
			 		第二种写法：select * from emp where sal in(1250,2600);
			 		
			 例：查找出emp表中奖金为空的所有人员信息；
			 	    select * from emp where comm is null;
			 	    
			 like:
			 
				 通配符：可以匹配任意字符：%，_；
				 注意：百分号表示能够匹配任意数量的任意字符，下划线表示能够匹配单个任意字符，这个
				 		   通配符通常跟like操作符一起使用；
				 
				 例：查找出emp表中姓名首位字母为S的所有人员信息：
				 	    select * from emp where ename like 'S%';
				 	    
				 例：查找出emp表中姓名的第二位字母为L的所有人员信息；
				 		select * from emp where ename like '_L%';
				 		
				 模糊查询：这种查找是在项目当中必不可少的查找方式，在我们日常生活中也非常地常见，
				 				 比如在一个项目中，有一个地方是进行人员姓名的查找，那么，当你忘记了他
				 				 的具体名字的时候，只记得他的姓或者只记得他的名也可以直接进行查找；
				 				 
下午：
		
		 8、排序：order by +需要排序的列名+升序（asc）或降序（desc）；
		 	  注意：排序通常情况下放在一个SQL语句的最后面；如果你不写是升序还是降序的话，那么
		 	            程序会自动给你进行升序；
		 	            
		 	  例：查找出emp表中收入大于1200的所有人员信息，并且按照工资收入进行降序排序
		 	  	     select * from emp where sal>1200 order by sal desc;
		 	  	     
		 	  注意：order by 排序并不局限于数字字段里的数据，可以为时间字段、字符字段中的数据进
		 	  		    行排序操作，其中，如果是字符的话，排序的规则为首字母的字母顺序；
		 	  		    
	伪表：dual；
	
			  概念：一个里面没有任何数据，并且不允许你进行插入和删除操作的Oracle自带的表，这个
			  		    表里只有一个较多dummy的字符字段并且里面没有任何数据，这个表的最大的作用
			  		    是用来进行一些相关函数以及运算的测试表；
		 	  		    
	单行函数：
		 
		 1、nvl....
		 
		 2、字符串大写转小写，小写转大写：Upper/Lower；
		 
		 	  例：把abcdef转为大写，然后再转为小写：
		 	  
		 	  	    select upper('abcefg') from dual;
		 	  	    select lower('ABCDEF') from dual;
		 	  	    
		 	  例：查询出emp表中收入大于3000的员工信息，其中，信息包括雇员编号、雇员姓名、雇员
		 	  		工作岗位和收入信息，并且要求雇员姓名和雇员工作岗位为小写的英文字母，然后再按
		 	  		照他们的姓名进行升序排序；
		 	  		
		 	  		select deptno,lower(ename) ename,lower(job) job,sal from emp where sal>3000 
		 	  		order by ename asc;
		 	  		
		 3、initcap：名字初始化（首字母大写，其他小写）；
		 	  
		 	   例：将emp表中的ename都是用名字初始化的形式打印出来；
		 	   
		 	   		 select initcap(ename) ename from emp;
		 	   		 
		 	   例：将一个完整的英文姓名是用名字初始化来进行打印；
		 	   
		 	   		 select initcap('tom adson') ename from dual;
		 	   		 
		 	   通过上面的例子可以看出，这种名字初始化的函数不止可以把一个单词进行初始化，还可以
		 	   把按照正常英文名字书写格式的后面几个单词也进行初始化操作；
		 	   
		 4、concat（p1，p2）：字符串连接
		 	  
		 	   例：将两个字符串进行拼接：
		 	   		 select concat('abcd','def') from dual;
		 	  
		 	  concat与||的区别：
		 	  
		 	  	1、首先，concat是一个函数，而||是操作符；
		 	  	
		 	  	2、concat后面跟的是两个需要拼接的字符串，并且有且只能拼接两个字符串，但是||可以
		 	  		 随心所欲；
		 	  		 
		 		3、这两者都能把其他类型的字段都进行拼接；
		 		
		 5、长度的计算：length
		 
		 	   例：求出emp表中姓名的长度；
		 	   		  select length(ename) from emp;
		 	   
		 	   例：求出一个带有汉字的字符的长度；
		 	   		  select length('哈哈哈哈123str') from dual;--10
		 	   		  
		 	   注意：在进行length函数来求长度的过程中，所有的字符统一算一个单位长度；
		 	   
		 6、截取一段长度：substr
		 
		 	  语法：substr（String，start[,length]）:表示对String进行截取，从start位开始，如果没有length
		 	  		    的话，那么截取直到String结束，如果有length，那么截取的长度为length长度；注意
		 	  		    ，如果start为正数，则是从String的左边开始数，如果是负数，则是从String的右边开始
		 	  		    数位数，记住，在Oracle中，下标是从1开始；
		 	  		    
		 	   例：对字符串abcdef进行截取，分别从截取的开始位置从左边开始、从右边开始，没有length，有
		 	   		 length这几种情况来示范；
		 	   		 
		 	   		 select substr('abcdef',2) from dual;--bcdef
		 	   		 select substr('abcdef',2,3) from dual;--bcd
		 	   		 select substr('abcdef',-2) from dual;--ef
		 	   		 select substr('abcdef',-4,3) from dual;--cde
		 	   		 
		 7、替代：replace
		 
		 	  语法：replace（String,if,then）;表示在String中寻找if，如果if存在，则使用then来进行替代
		 	  		    ，如果没有if，则不做任何操作，直接输出String；
		 	  		    
		 	  例：将一个abcdefgfff的字符串中的f替换为*；
		 	  		select replace('abcdefgfff','f','*') from dual;
		 	  		
		 8、填充：Lpad/Rpad
		 	  
		 	  语法：Lpad（String，number，str）：表示使用number减String长度的空白区域使用str来进
		 	  		   行填充，如果使用Lpad则填充的区域在左边，如果使用Rpad则填充的区域在右边；我们
		 	  		   常用于为了统一长度的场合，比如：银行的存折上的*号键；
		 	  		   
		 	  例：将emp表中的job设置为12个长度，多余的部分使用*来填充；
		 	  	     select deptno,ename,rpad(job,12,'*') job from emp;
		 	  	     
		 9、去掉首位的空白：trim
		 	  
		 	   语法：trim（需要去空白的字符或字段）
		 	   
		 	   例： 去掉一个字符串中前后的空白
		 	   		   select trim('   smi  th   ') from dual;
		 	   		   
		 	   注意：此方法不会去除中间的空白
		 	   
		 10、查找：instr
		 		
		 		语法：instr（String，char[,number]）:查找char这个字符串在String中第一次出现的位置，
		 				  如果有number的话，number可以指定它从哪个地方开始查找，若number为正数，
		 				  则从左往右数number个位置再进行搜索，如果为负，则从右往左数；
		 				  
		 		注意：如果带了number，那么搜索的位置是从number那一个位置开始，包括那个位置；
		 				  若查不到，则返回0；
		 		
		 		例：
		 			 select instr('abcdefccc','c') from dual;--3;
		 			 select instr('abcdefccc','c'，4) from dual;--7;
		 			 select instr('abcdefccc','c'，3) from dual;--3;
		 			 select instr('abcdefccc','cde') from dual;--3;
		 			 select instr('abcdefccc','c',-3) from dual;--7;
		 	  
		 	  
		 	  